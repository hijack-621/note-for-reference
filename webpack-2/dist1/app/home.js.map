{"version":3,"sources":["webpack://webpack-2/./src/index.js","webpack://webpack-2/./src/test.js","webpack://webpack-2/webpack/bootstrap","webpack://webpack-2/webpack/runtime/define property getters","webpack://webpack-2/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-2/webpack/runtime/make namespace object","webpack://webpack-2/webpack/startup"],"names":["console","log","calc","sum","a","b","sub"],"mappings":";;;;;;;;;;;;CACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEAA,OAAO,CAACC,GAAR,CAAYC,iDAAA,CAAS,CAAT,EAAW,CAAX,CAAZ,E,CAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qB;;;;;;;;;;;;;;ACtDA,IAAIC,GAAG,GAAG,SAANA,GAAM,CAACC,CAAD,EAAGC,CAAH,EAAS;AACf,SAAOD,CAAC,GAAGC,CAAJ,GAAQ,KAAf;AACH,CAFD;;AAIA,IAAIC,GAAG,IAAIF,CAAC,EAAE,UAAAC,CAAC,EAAI;AACf,SAAOD,CAAC,GAAGC,CAAJ,GAAQ,KAAf;AACH,CAFM,CAAP;AAIA,iEAAc;AACVF,KAAG,EAAHA,GADU;AACNG,KAAG,EAAHA;AADM,CAAd,E;;;;;;UCRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"app/home.js","sourcesContent":["import calc from './test.js'\r\n//test 代码【let sum = (a,b) => {\r\n//     return a + b + 'sum'\r\n// }\r\n\r\n// let sub = (a, b => {\r\n//     return a - b + 'sub'\r\n// })\r\n\r\n// export default{\r\n//     sum,sub\r\n// }】\r\n\r\nconsole.log(calc.sum(2,6))\r\n\r\n// import React from 'react'\r\n// import { render } from 'react-dom' \r\n\r\n// render(<h1>react ceshi</h1>,window.root)\r\n//表示通过 @babel/prest-react 插件解析react语法  将 render中h1 内容 渲染到 页面 id为root的dom中去\r\n\r\n\r\n//默认 import 一个包的话，webpack打包的时候回去解析这个包，并且打包到目标文件中去\r\n//可以在module属性中配置 noParse属性：noParse:'/jquery/'\r\n//这样打包的时候就不会去解析jquery然后打包了\r\n// import jquery from 'jquery'\r\n\r\n//  import moment from 'moment'\r\n\r\n//  import 'moment/locale/zh-cn'\r\n\r\n//  let time = moment().endOf('day').fromNow() //表示离一天结束还有多少小时 \r\n// console.log(time)\r\n\r\n\r\n//  class A{\r\n//      constructor(){\r\n//          console.log('aaaaabbb')\r\n//      }\r\n//  }\r\n//  let a = new A()\r\n\r\n// let xhr = new XMLHttpRequest()\r\n// //xhr.open('GET', '/api/test', true) //开启异步\r\n\r\n// xhr.open('GET', '/test', true)//访问webpack内置的express 第二个参数 与 webpack.config.js devServer中一致\r\n// // 请求express  监听的3000 端口下的 /api/test,而webpack-dev-server默认是8080端口\r\n// //请求3000端口就会产生跨域，默认请求不到\r\n// //我们可以先去请求webpack-dev-server,让webpack充当中转，转而去请求3000就实现了跨域\r\n// xhr.onload = function () {\r\n//     console.log(xhr.response);\r\n// }\r\n// xhr.send() //发送ajax请求\r\n//console.log(test)\r\n// console.log(test2)\r\n\r\n","let sum = (a,b) => {\r\n    return a + b + 'sum'\r\n}\r\n\r\nlet sub = (a, b => {\r\n    return a - b + 'sub'\r\n})\r\n\r\nexport default{\r\n    sum,sub\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}